{"version":3,"file":"static/js/526.5109b1f4.chunk.js","mappings":"yKA4BA,UAtBuB,WACrB,IAAMA,GAAWC,EAAAA,EAAAA,KACTC,GAAOC,EAAAA,EAAAA,MAAPD,GACAE,GAAaC,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAAjDH,SAQR,OANAI,EAAAA,EAAAA,YAAU,WACJN,GACFF,GAASS,EAAAA,EAAAA,IAAcP,GAE3B,GAAG,CAACF,EAAUE,KAGZQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,UACpDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAgBE,MAAO,CAAEC,SAAU,KAAMF,UACpDF,EAAAA,EAAAA,KAACK,EAAAA,GAAQ,CAACC,KAAMZ,EAAUa,UAAQ,SAK7C,C,0FCtBahB,EAAiB,WAAH,OAASiB,EAAAA,EAAAA,KAA2B,EAClDb,EAAkDc,EAAAA,E","sources":["Pages/BlogDetail/index.tsx","Redux/hook.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { BlogItem } from '../../Components';\nimport { useAppDispatch, useAppSelector } from '../../Redux/hook';\nimport { getBlogDetail } from '../../Redux/BlogSlice';\nimport { useParams } from 'react-router-dom';\n\nconst BlogDetailPage = () => {\n  const dispatch = useAppDispatch();\n  const { id } = useParams<{ id: string }>();\n  const { blogItem } = useAppSelector((state) => state.blog);\n\n  useEffect(() => {\n    if (id) {\n      dispatch(getBlogDetail(id));\n    }\n  }, [dispatch, id]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"d-flex flex-column align-items-center\">\n        <ul className=\"list-unstyled\" style={{ maxWidth: 800 }}>\n          {<BlogItem data={blogItem} isDetail />}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogDetailPage;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n"],"names":["dispatch","useAppDispatch","id","useParams","blogItem","useAppSelector","state","blog","useEffect","getBlogDetail","_jsx","className","children","style","maxWidth","BlogItem","data","isDetail","useDispatch","useSelector"],"sourceRoot":""}