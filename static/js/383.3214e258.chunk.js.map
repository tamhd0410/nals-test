{"version":3,"file":"static/js/383.3214e258.chunk.js","mappings":"6LAkDA,UA3CiB,WACf,IAAMA,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,EAAAA,MACjBC,GAA4BC,EAAAA,EAAAA,UAAwB,CAClDC,KAAM,EACNC,MAAO,EACPC,OAAQ,KACRC,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GAJKO,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAKxBI,GAA6BC,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAAzDC,EAAKJ,EAALI,MAAOC,EAASL,EAATK,UASf,OAJAC,EAAAA,EAAAA,YAAU,WACRnB,GAASoB,EAAAA,EAAAA,IAAST,GACpB,GAAG,CAACX,EAAUW,EAAOL,QAGnBe,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4CAA2CC,SAAA,EACxDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAgBG,MAAO,CAAEC,SAAU,KAAMH,SACpDL,EACGS,MAAMC,KAAK,CAAEC,OAAQ,IAAKC,KAAI,SAACC,EAAGC,GAAC,OAAKX,EAAAA,EAAAA,KAACY,EAAAA,GAAQ,GAAMD,EAAK,IAC5Df,EAAMa,KAAI,SAACd,GAAI,OACbK,EAAAA,EAAAA,KAACY,EAAAA,GAAQ,CACPC,YAAa,SAACC,GAAU,OAAKjC,EAAS,SAADkC,OAAUD,GAAK,EAEpDE,KAAMrB,GADDA,EAAKmB,GAEV,OAGVd,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+BAA8BC,UAC3CF,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACTC,YAAa5B,EAAOL,KACpBkC,WAAY,GACZC,aAzBW,SAACnC,GACpBM,GAAU,SAAC8B,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAEpC,KAAAA,GAAI,GACtC,UA6BF,C,0FC5CaL,EAAiB,WAAH,OAAS2C,EAAAA,EAAAA,KAA2B,EAClD9B,EAAkD+B,EAAAA,E","sources":["Pages/Home/index.tsx","Redux/hook.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { BlogItem, Pagination } from '../../Components';\nimport { useAppDispatch, useAppSelector } from '../../Redux/hook';\nimport { getBlogs } from '../../Redux/BlogSlice';\nimport { BlogParamsDTO } from '../../Dto/Blog';\nimport { useNavigate } from 'react-router-dom';\n\nconst HomePage = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const [params, setParams] = useState<BlogParamsDTO>({\n    page: 1,\n    limit: 7,\n    search: '',\n  });\n  const { blogs, isLoading } = useAppSelector((state) => state.blog);\n\n  const onChangePage = (page: number) => {\n    setParams((prev) => ({ ...prev, page }));\n  };\n  useEffect(() => {\n    dispatch(getBlogs(params));\n  }, [dispatch, params.page]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"d-flex flex-column align-items-center jus\">\n        <ul className=\"list-unstyled\" style={{ maxWidth: 800 }}>\n          {isLoading\n            ? Array.from({ length: 5 }).map((_, i) => <BlogItem key={i} />)\n            : blogs.map((blog) => (\n                <BlogItem\n                  onClickItem={(id: string) => navigate(`/blog/${id}`)}\n                  key={blog.id}\n                  data={blog}\n                />\n              ))}\n        </ul>\n        <div className=\"d-flex justify-content-start\">\n          <Pagination\n            currentPage={params.page}\n            totalPages={10}\n            onChangePage={onChangePage}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n"],"names":["dispatch","useAppDispatch","navigate","useNavigate","_useState","useState","page","limit","search","_useState2","_slicedToArray","params","setParams","_useAppSelector","useAppSelector","state","blog","blogs","isLoading","useEffect","getBlogs","_jsx","className","children","_jsxs","style","maxWidth","Array","from","length","map","_","i","BlogItem","onClickItem","id","concat","data","Pagination","currentPage","totalPages","onChangePage","prev","_objectSpread","useDispatch","useSelector"],"sourceRoot":""}